import{a as p}from"./chunk-NY5GKKF2.js";import{a as s}from"./chunk-NJXWKAYO.js";import{o as d}from"./chunk-5OVQF42F.js";import{J as n,aa as a,fa as l,g as r}from"./chunk-RBD7S4WU.js";var v=(()=>{let t=class t{constructor(e){this.http=e}getIntialData(){return this.http.get(s.serverAPI.INTIALDATA)}getFieldEmployeeData(){return this.http.get(s.serverAPI.FIELD_EMPLOYEE)}postJob(e){return this.http.post(s.serverAPI.ROOT+s.serverAPI.POST_JOB,e)}getJob(){return this.http.get(s.serverAPI.ROOT+s.serverAPI.POST_JOB)}};t.\u0275fac=function(i){return new(i||t)(l(d))},t.\u0275prov=a({token:t,factory:t.\u0275fac,providedIn:"root"});let o=t;return o})();var c=new r([]),f=new r(!1),u=new r(!1),I=new r(!1),w=new r(!1),h=new r({rig_master:[],service_type:[],unit_of_measure:[],customers:[]}),m=new r(!1),y=new r(!1),g=new r([]),j=new r(!1),P=new r(!1),J=(()=>{let t=class t{constructor(e){this.httpClient=e,this.jobs$=c.asObservable(),this.jobGetLoading$=f.asObservable(),this.jobGetError$=I.asObservable(),this.jobPostLoading$=u.asObservable(),this.jobPostError$=w.asObservable(),this.intialData$=h.asObservable(),this.intialDataGetLoading$=m.asObservable(),this.intialDataError$=y.asObservable(),this.fieldemployee$=g.asObservable(),this.fieldemployeeGetLoading$=j.asObservable(),this.fieldemployeeGetError$=P.asObservable()}postJob(e){return new Promise((i,E)=>{u.next(!0),this.httpClient.postJob(e).pipe(n(()=>u.next(!1))).subscribe({next:b=>{c.next(c.value.concat(b)),i(!0)},error:b=>{throw console.error("Error on posting job data",b.message),E(),new p("Error on posting job data")}})})}getJob(){f.next(!0),this.httpClient.getJob().pipe(n(()=>f.next(!1))).subscribe({next:e=>{c.next(e),console.log(e)},error:e=>{throw console.error("Error on geting job list",e.message),new p("Error on geting job list")}})}updateJob(){}getIntialData(){console.log("GetIntial Data Called"),m.next(!0),this.httpClient.getIntialData().pipe(n(()=>m.next(!1))).subscribe({next:e=>{h.next(e),console.log(e)},error:e=>{console.error("Error fetching data",e),h.next({rig_master:[],service_type:[],unit_of_measure:[],customers:[]})}})}getFieldEmployee(){j.next(!0),this.httpClient.getFieldEmployeeData().pipe(n(()=>j.next(!1))).subscribe({next:e=>{g.next(e),console.log(e)},error:e=>{console.error("Error fetching data",e),g.next([])}})}};t.\u0275fac=function(i){return new(i||t)(l(v))},t.\u0275prov=a({token:t,factory:t.\u0275fac,providedIn:"root"});let o=t;return o})();export{J as a};
